# Update cards/management/commands/populate_countries.py with complete country list

from django.core.management.base import BaseCommand
from cards.models import CountryCode


class Command(BaseCommand):
    help = 'Populate database with all country codes and flags'

    def handle(self, *args, **options):
        countries = [
            # A
            ('Afghanistan', '+93', 'ğŸ‡¦ğŸ‡«', 'AF'),
            ('Albania', '+355', 'ğŸ‡¦ğŸ‡±', 'AL'),
            ('Algeria', '+213', 'ğŸ‡©ğŸ‡¿', 'DZ'),
            ('American Samoa', '+1684', 'ğŸ‡¦ğŸ‡¸', 'AS'),
            ('Andorra', '+376', 'ğŸ‡¦ğŸ‡©', 'AD'),
            ('Angola', '+244', 'ğŸ‡¦ğŸ‡´', 'AO'),
            ('Argentina', '+54', 'ğŸ‡¦ğŸ‡·', 'AR'),
            ('Armenia', '+374', 'ğŸ‡¦ğŸ‡²', 'AM'),
            ('Australia', '+61', 'ğŸ‡¦ğŸ‡º', 'AU'),
            ('Austria', '+43', 'ğŸ‡¦ğŸ‡¹', 'AT'),
            ('Azerbaijan', '+994', 'ğŸ‡¦ğŸ‡¿', 'AZ'),

            # B
            ('Bahamas', '+1242', 'ğŸ‡§ğŸ‡¸', 'BS'),
            ('Bahrain', '+973', 'ğŸ‡§ğŸ‡­', 'BH'),
            ('Bangladesh', '+880', 'ğŸ‡§ğŸ‡©', 'BD'),
            ('Barbados', '+1246', 'ğŸ‡§ğŸ‡§', 'BB'),
            ('Belarus', '+375', 'ğŸ‡§ğŸ‡¾', 'BY'),
            ('Belgium', '+32', 'ğŸ‡§ğŸ‡ª', 'BE'),
            ('Belize', '+501', 'ğŸ‡§ğŸ‡¿', 'BZ'),
            ('Benin', '+229', 'ğŸ‡§ğŸ‡¯', 'BJ'),
            ('Bhutan', '+975', 'ğŸ‡§ğŸ‡¹', 'BT'),
            ('Bolivia', '+591', 'ğŸ‡§ğŸ‡´', 'BO'),
            ('Bosnia and Herzegovina', '+387', 'ğŸ‡§ğŸ‡¦', 'BA'),
            ('Botswana', '+267', 'ğŸ‡§ğŸ‡¼', 'BW'),
            ('Brazil', '+55', 'ğŸ‡§ğŸ‡·', 'BR'),
            ('Brunei', '+673', 'ğŸ‡§ğŸ‡³', 'BN'),
            ('Bulgaria', '+359', 'ğŸ‡§ğŸ‡¬', 'BG'),
            ('Burkina Faso', '+226', 'ğŸ‡§ğŸ‡«', 'BF'),
            ('Burundi', '+257', 'ğŸ‡§ğŸ‡®', 'BI'),

            # C
            ('Cambodia', '+855', 'ğŸ‡°ğŸ‡­', 'KH'),
            ('Cameroon', '+237', 'ğŸ‡¨ğŸ‡²', 'CM'),
            ('Canada', '+1', 'ğŸ‡¨ğŸ‡¦', 'CA'),
            ('Cape Verde', '+238', 'ğŸ‡¨ğŸ‡»', 'CV'),
            ('Central African Republic', '+236', 'ğŸ‡¨ğŸ‡«', 'CF'),
            ('Chad', '+235', 'ğŸ‡¹ğŸ‡©', 'TD'),
            ('Chile', '+56', 'ğŸ‡¨ğŸ‡±', 'CL'),
            ('China', '+86', 'ğŸ‡¨ğŸ‡³', 'CN'),
            ('Colombia', '+57', 'ğŸ‡¨ğŸ‡´', 'CO'),
            ('Comoros', '+269', 'ğŸ‡°ğŸ‡²', 'KM'),
            ('Congo', '+242', 'ğŸ‡¨ğŸ‡¬', 'CG'),
            ('Congo (DRC)', '+243', 'ğŸ‡¨ğŸ‡©', 'CD'),
            ('Costa Rica', '+506', 'ğŸ‡¨ğŸ‡·', 'CR'),
            ('Croatia', '+385', 'ğŸ‡­ğŸ‡·', 'HR'),
            ('Cuba', '+53', 'ğŸ‡¨ğŸ‡º', 'CU'),
            ('Cyprus', '+357', 'ğŸ‡¨ğŸ‡¾', 'CY'),
            ('Czech Republic', '+420', 'ğŸ‡¨ğŸ‡¿', 'CZ'),

            # D
            ('Denmark', '+45', 'ğŸ‡©ğŸ‡°', 'DK'),
            ('Djibouti', '+253', 'ğŸ‡©ğŸ‡¯', 'DJ'),
            ('Dominica', '+1767', 'ğŸ‡©ğŸ‡²', 'DM'),
            ('Dominican Republic', '+1849', 'ğŸ‡©ğŸ‡´', 'DO'),

            # E
            ('Ecuador', '+593', 'ğŸ‡ªğŸ‡¨', 'EC'),
            ('Egypt', '+20', 'ğŸ‡ªğŸ‡¬', 'EG'),
            ('El Salvador', '+503', 'ğŸ‡¸ğŸ‡»', 'SV'),
            ('Equatorial Guinea', '+240', 'ğŸ‡¬ğŸ‡¶', 'GQ'),
            ('Eritrea', '+291', 'ğŸ‡ªğŸ‡·', 'ER'),
            ('Estonia', '+372', 'ğŸ‡ªğŸ‡ª', 'EE'),
            ('Eswatini', '+268', 'ğŸ‡¸ğŸ‡¿', 'SZ'),
            ('Ethiopia', '+251', 'ğŸ‡ªğŸ‡¹', 'ET'),

            # F
            ('Fiji', '+679', 'ğŸ‡«ğŸ‡¯', 'FJ'),
            ('Finland', '+358', 'ğŸ‡«ğŸ‡®', 'FI'),
            ('France', '+33', 'ğŸ‡«ğŸ‡·', 'FR'),

            # G
            ('Gabon', '+241', 'ğŸ‡¬ğŸ‡¦', 'GA'),
            ('Gambia', '+220', 'ğŸ‡¬ğŸ‡²', 'GM'),
            ('Georgia', '+995', 'ğŸ‡¬ğŸ‡ª', 'GE'),
            ('Germany', '+49', 'ğŸ‡©ğŸ‡ª', 'DE'),
            ('Ghana', '+233', 'ğŸ‡¬ğŸ‡­', 'GH'),
            ('Greece', '+30', 'ğŸ‡¬ğŸ‡·', 'GR'),
            ('Grenada', '+1473', 'ğŸ‡¬ğŸ‡©', 'GD'),
            ('Guatemala', '+502', 'ğŸ‡¬ğŸ‡¹', 'GT'),
            ('Guinea', '+224', 'ğŸ‡¬ğŸ‡³', 'GN'),
            ('Guinea-Bissau', '+245', 'ğŸ‡¬ğŸ‡¼', 'GW'),
            ('Guyana', '+592', 'ğŸ‡¬ğŸ‡¾', 'GY'),

            # H
            ('Haiti', '+509', 'ğŸ‡­ğŸ‡¹', 'HT'),
            ('Honduras', '+504', 'ğŸ‡­ğŸ‡³', 'HN'),
            ('Hong Kong', '+852', 'ğŸ‡­ğŸ‡°', 'HK'),
            ('Hungary', '+36', 'ğŸ‡­ğŸ‡º', 'HU'),

            # I
            ('Iceland', '+354', 'ğŸ‡®ğŸ‡¸', 'IS'),
            ('India', '+91', 'ğŸ‡®ğŸ‡³', 'IN'),
            ('Indonesia', '+62', 'ğŸ‡®ğŸ‡©', 'ID'),
            ('Iran', '+98', 'ğŸ‡®ğŸ‡·', 'IR'),
            ('Iraq', '+964', 'ğŸ‡®ğŸ‡¶', 'IQ'),
            ('Ireland', '+353', 'ğŸ‡®ğŸ‡ª', 'IE'),
            ('Israel', '+972', 'ğŸ‡®ğŸ‡±', 'IL'),
            ('Italy', '+39', 'ğŸ‡®ğŸ‡¹', 'IT'),
            ('Ivory Coast', '+225', 'ğŸ‡¨ğŸ‡®', 'CI'),

            # J
            ('Jamaica', '+1876', 'ğŸ‡¯ğŸ‡²', 'JM'),
            ('Japan', '+81', 'ğŸ‡¯ğŸ‡µ', 'JP'),
            ('Jordan', '+962', 'ğŸ‡¯ğŸ‡´', 'JO'),

            # K
            ('Kazakhstan', '+7', 'ğŸ‡°ğŸ‡¿', 'KZ'),
            ('Kenya', '+254', 'ğŸ‡°ğŸ‡ª', 'KE'),
            ('Kiribati', '+686', 'ğŸ‡°ğŸ‡®', 'KI'),
            ('Kuwait', '+965', 'ğŸ‡°ğŸ‡¼', 'KW'),
            ('Kyrgyzstan', '+996', 'ğŸ‡°ğŸ‡¬', 'KG'),

            # L
            ('Laos', '+856', 'ğŸ‡±ğŸ‡¦', 'LA'),
            ('Latvia', '+371', 'ğŸ‡±ğŸ‡»', 'LV'),
            ('Lebanon', '+961', 'ğŸ‡±ğŸ‡§', 'LB'),
            ('Lesotho', '+266', 'ğŸ‡±ğŸ‡¸', 'LS'),
            ('Liberia', '+231', 'ğŸ‡±ğŸ‡·', 'LR'),
            ('Libya', '+218', 'ğŸ‡±ğŸ‡¾', 'LY'),
            ('Liechtenstein', '+423', 'ğŸ‡±ğŸ‡®', 'LI'),
            ('Lithuania', '+370', 'ğŸ‡±ğŸ‡¹', 'LT'),
            ('Luxembourg', '+352', 'ğŸ‡±ğŸ‡º', 'LU'),

            # M
            ('Macao', '+853', 'ğŸ‡²ğŸ‡´', 'MO'),
            ('Madagascar', '+261', 'ğŸ‡²ğŸ‡¬', 'MG'),
            ('Malawi', '+265', 'ğŸ‡²ğŸ‡¼', 'MW'),
            ('Malaysia', '+60', 'ğŸ‡²ğŸ‡¾', 'MY'),
            ('Maldives', '+960', 'ğŸ‡²ğŸ‡»', 'MV'),
            ('Mali', '+223', 'ğŸ‡²ğŸ‡±', 'ML'),
            ('Malta', '+356', 'ğŸ‡²ğŸ‡¹', 'MT'),
            ('Marshall Islands', '+692', 'ğŸ‡²ğŸ‡­', 'MH'),
            ('Mauritania', '+222', 'ğŸ‡²ğŸ‡·', 'MR'),
            ('Mauritius', '+230', 'ğŸ‡²ğŸ‡º', 'MU'),
            ('Mexico', '+52', 'ğŸ‡²ğŸ‡½', 'MX'),
            ('Micronesia', '+691', 'ğŸ‡«ğŸ‡²', 'FM'),
            ('Moldova', '+373', 'ğŸ‡²ğŸ‡©', 'MD'),
            ('Monaco', '+377', 'ğŸ‡²ğŸ‡¨', 'MC'),
            ('Mongolia', '+976', 'ğŸ‡²ğŸ‡³', 'MN'),
            ('Montenegro', '+382', 'ğŸ‡²ğŸ‡ª', 'ME'),
            ('Morocco', '+212', 'ğŸ‡²ğŸ‡¦', 'MA'),
            ('Mozambique', '+258', 'ğŸ‡²ğŸ‡¿', 'MZ'),
            ('Myanmar', '+95', 'ğŸ‡²ğŸ‡²', 'MM'),

            # N
            ('Namibia', '+264', 'ğŸ‡³ğŸ‡¦', 'NA'),
            ('Nauru', '+674', 'ğŸ‡³ğŸ‡·', 'NR'),
            ('Nepal', '+977', 'ğŸ‡³ğŸ‡µ', 'NP'),
            ('Netherlands', '+31', 'ğŸ‡³ğŸ‡±', 'NL'),
            ('New Zealand', '+64', 'ğŸ‡³ğŸ‡¿', 'NZ'),
            ('Nicaragua', '+505', 'ğŸ‡³ğŸ‡®', 'NI'),
            ('Niger', '+227', 'ğŸ‡³ğŸ‡ª', 'NE'),
            ('Nigeria', '+234', 'ğŸ‡³ğŸ‡¬', 'NG'),
            ('North Korea', '+850', 'ğŸ‡°ğŸ‡µ', 'KP'),
            ('North Macedonia', '+389', 'ğŸ‡²ğŸ‡°', 'MK'),
            ('Norway', '+47', 'ğŸ‡³ğŸ‡´', 'NO'),

            # O
            ('Oman', '+968', 'ğŸ‡´ğŸ‡²', 'OM'),

            # P
            ('Pakistan', '+92', 'ğŸ‡µğŸ‡°', 'PK'),
            ('Palau', '+680', 'ğŸ‡µğŸ‡¼', 'PW'),
            ('Palestine', '+970', 'ğŸ‡µğŸ‡¸', 'PS'),
            ('Panama', '+507', 'ğŸ‡µğŸ‡¦', 'PA'),
            ('Papua New Guinea', '+675', 'ğŸ‡µğŸ‡¬', 'PG'),
            ('Paraguay', '+595', 'ğŸ‡µğŸ‡¾', 'PY'),
            ('Peru', '+51', 'ğŸ‡µğŸ‡ª', 'PE'),
            ('Philippines', '+63', 'ğŸ‡µğŸ‡­', 'PH'),
            ('Poland', '+48', 'ğŸ‡µğŸ‡±', 'PL'),
            ('Portugal', '+351', 'ğŸ‡µğŸ‡¹', 'PT'),
            ('Puerto Rico', '+1787', 'ğŸ‡µğŸ‡·', 'PR'),

            # Q
            ('Qatar', '+974', 'ğŸ‡¶ğŸ‡¦', 'QA'),

            # R
            ('Romania', '+40', 'ğŸ‡·ğŸ‡´', 'RO'),
            ('Russia', '+7', 'ğŸ‡·ğŸ‡º', 'RU'),
            ('Rwanda', '+250', 'ğŸ‡·ğŸ‡¼', 'RW'),

            # S
            ('Saint Kitts and Nevis', '+1869', 'ğŸ‡°ğŸ‡³', 'KN'),
            ('Saint Lucia', '+1758', 'ğŸ‡±ğŸ‡¨', 'LC'),
            ('Saint Vincent', '+1784', 'ğŸ‡»ğŸ‡¨', 'VC'),
            ('Samoa', '+685', 'ğŸ‡¼ğŸ‡¸', 'WS'),
            ('San Marino', '+378', 'ğŸ‡¸ğŸ‡²', 'SM'),
            ('Saudi Arabia', '+966', 'ğŸ‡¸ğŸ‡¦', 'SA'),
            ('Senegal', '+221', 'ğŸ‡¸ğŸ‡³', 'SN'),
            ('Serbia', '+381', 'ğŸ‡·ğŸ‡¸', 'RS'),
            ('Seychelles', '+248', 'ğŸ‡¸ğŸ‡¨', 'SC'),
            ('Sierra Leone', '+232', 'ğŸ‡¸ğŸ‡±', 'SL'),
            ('Singapore', '+65', 'ğŸ‡¸ğŸ‡¬', 'SG'),
            ('Slovakia', '+421', 'ğŸ‡¸ğŸ‡°', 'SK'),
            ('Slovenia', '+386', 'ğŸ‡¸ğŸ‡®', 'SI'),
            ('Solomon Islands', '+677', 'ğŸ‡¸ğŸ‡§', 'SB'),
            ('Somalia', '+252', 'ğŸ‡¸ğŸ‡´', 'SO'),
            ('South Africa', '+27', 'ğŸ‡¿ğŸ‡¦', 'ZA'),
            ('South Korea', '+82', 'ğŸ‡°ğŸ‡·', 'KR'),
            ('South Sudan', '+211', 'ğŸ‡¸ğŸ‡¸', 'SS'),
            ('Spain', '+34', 'ğŸ‡ªğŸ‡¸', 'ES'),
            ('Sri Lanka', '+94', 'ğŸ‡±ğŸ‡°', 'LK'),
            ('Sudan', '+249', 'ğŸ‡¸ğŸ‡©', 'SD'),
            ('Suriname', '+597', 'ğŸ‡¸ğŸ‡·', 'SR'),
            ('Sweden', '+46', 'ğŸ‡¸ğŸ‡ª', 'SE'),
            ('Switzerland', '+41', 'ğŸ‡¨ğŸ‡­', 'CH'),
            ('Syria', '+963', 'ğŸ‡¸ğŸ‡¾', 'SY'),

            # T
            ('Taiwan', '+886', 'ğŸ‡¹ğŸ‡¼', 'TW'),
            ('Tajikistan', '+992', 'ğŸ‡¹ğŸ‡¯', 'TJ'),
            ('Tanzania', '+255', 'ğŸ‡¹ğŸ‡¿', 'TZ'),
            ('Thailand', '+66', 'ğŸ‡¹ğŸ‡­', 'TH'),
            ('Timor-Leste', '+670', 'ğŸ‡¹ğŸ‡±', 'TL'),
            ('Togo', '+228', 'ğŸ‡¹ğŸ‡¬', 'TG'),
            ('Tonga', '+676', 'ğŸ‡¹ğŸ‡´', 'TO'),
            ('Trinidad and Tobago', '+1868', 'ğŸ‡¹ğŸ‡¹', 'TT'),
            ('Tunisia', '+216', 'ğŸ‡¹ğŸ‡³', 'TN'),
            ('Turkey', '+90', 'ğŸ‡¹ğŸ‡·', 'TR'),
            ('Turkmenistan', '+993', 'ğŸ‡¹ğŸ‡²', 'TM'),
            ('Tuvalu', '+688', 'ğŸ‡¹ğŸ‡»', 'TV'),

            # U
            ('Uganda', '+256', 'ğŸ‡ºğŸ‡¬', 'UG'),
            ('Ukraine', '+380', 'ğŸ‡ºğŸ‡¦', 'UA'),
            ('United Arab Emirates', '+971', 'ğŸ‡¦ğŸ‡ª', 'AE'),
            ('United Kingdom', '+44', 'ğŸ‡¬ğŸ‡§', 'GB'),
            ('United States', '+1', 'ğŸ‡ºğŸ‡¸', 'US'),
            ('Uruguay', '+598', 'ğŸ‡ºğŸ‡¾', 'UY'),
            ('Uzbekistan', '+998', 'ğŸ‡ºğŸ‡¿', 'UZ'),

            # V
            ('Vanuatu', '+678', 'ğŸ‡»ğŸ‡º', 'VU'),
            ('Vatican City', '+39', 'ğŸ‡»ğŸ‡¦', 'VA'),
            ('Venezuela', '+58', 'ğŸ‡»ğŸ‡ª', 'VE'),
            ('Vietnam', '+84', 'ğŸ‡»ğŸ‡³', 'VN'),

            # Y
            ('Yemen', '+967', 'ğŸ‡¾ğŸ‡ª', 'YE'),

            # Z
            ('Zambia', '+260', 'ğŸ‡¿ğŸ‡²', 'ZM'),
            ('Zimbabwe', '+263', 'ğŸ‡¿ğŸ‡¼', 'ZW'),
        ]

        created_count = 0
        updated_count = 0

        for country_name, country_code, flag_emoji, iso_code in countries:
            country, created = CountryCode.objects.get_or_create(
                iso_code=iso_code,
                defaults={
                    'country_name': country_name,
                    'country_code': country_code,
                    'flag_emoji': flag_emoji,
                }
            )
            if created:
                created_count += 1
                self.stdout.write(
                    self.style.SUCCESS(f'Created: {flag_emoji} {country_name}')
                )
            else:
                # Update existing records in case of changes
                if (country.country_name != country_name or
                        country.country_code != country_code or
                        country.flag_emoji != flag_emoji):
                    country.country_name = country_name
                    country.country_code = country_code
                    country.flag_emoji = flag_emoji
                    country.save()
                    updated_count += 1
                    self.stdout.write(
                        self.style.WARNING(f'Updated: {flag_emoji} {country_name}')
                    )

        self.stdout.write(
            self.style.SUCCESS(
                f'Success! Created: {created_count}, Updated: {updated_count}. '
                f'Total countries: {CountryCode.objects.count()}'
            )
        )