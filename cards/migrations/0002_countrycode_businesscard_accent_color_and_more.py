# Generated by Django 5.1.4 on 2025-06-20 23:36

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('cards', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CountryCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_name', models.CharField(max_length=100)),
                ('country_code', models.CharField(max_length=10)),
                ('flag_emoji', models.CharField(max_length=10)),
                ('iso_code', models.CharField(max_length=2)),
            ],
            options={
                'verbose_name': 'Country Code',
                'verbose_name_plural': 'Country Codes',
                'ordering': ['country_name'],
            },
        ),
        migrations.AddField(
            model_name='businesscard',
            name='accent_color',
            field=models.CharField(default='#764ba2', help_text='Background gradient end color (hex format: #764ba2)', max_length=7, validators=[django.core.validators.RegexValidator('^#[0-9A-Fa-f]{6}$', 'Enter a valid hex color code')]),
        ),
        migrations.AddField(
            model_name='businesscard',
            name='background_color',
            field=models.CharField(default='#667eea', help_text='Background gradient start color (hex format: #667eea)', max_length=7, validators=[django.core.validators.RegexValidator('^#[0-9A-Fa-f]{6}$', 'Enter a valid hex color code')]),
        ),
        migrations.AddField(
            model_name='businesscard',
            name='banner_image',
            field=models.ImageField(blank=True, help_text='Banner image displayed at the top of the card', null=True, upload_to='banners/'),
        ),
        migrations.AddField(
            model_name='businesscard',
            name='banner_text',
            field=models.CharField(blank=True, help_text='Text overlay on banner (optional)', max_length=100),
        ),
        migrations.AddField(
            model_name='businesscard',
            name='text_color',
            field=models.CharField(default='#ffffff', help_text='Text color for hero section (hex format: #ffffff)', max_length=7, validators=[django.core.validators.RegexValidator('^#[0-9A-Fa-f]{6}$', 'Enter a valid hex color code')]),
        ),
        migrations.AddField(
            model_name='cardview',
            name='latitude',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='cardview',
            name='longitude',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='cardview',
            name='region',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.CreateModel(
            name='PhoneNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(choices=[('mobile', 'Mobile'), ('work', 'Work'), ('home', 'Home'), ('fax', 'Fax'), ('other', 'Other')], default='mobile', max_length=50)),
                ('number', models.CharField(help_text='Phone number without country code', max_length=20)),
                ('is_primary', models.BooleanField(default=False, help_text='Primary contact number')),
                ('is_whatsapp', models.BooleanField(default=False, help_text='Available on WhatsApp')),
                ('business_card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phone_numbers', to='cards.businesscard')),
                ('country_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cards.countrycode')),
            ],
            options={
                'verbose_name': 'Phone Number',
                'verbose_name_plural': 'Phone Numbers',
                'ordering': ['-is_primary', 'label'],
            },
        ),
    ]
